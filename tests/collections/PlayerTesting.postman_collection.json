{
	"info": {
		"_postman_id": "096b4527-8145-4c08-96f9-f37eb97a998d",
		"name": "PlayerTesting",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39700120"
	},
	"item": [
		{
			"name": "create_player",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Player created (201)\", function () {",
							"    pm.response.to.have.status(201);",
							"    if (pm.response.json().hasOwnProperty('player_id')) {",
							"        pm.environment.set(\"player_id\", pm.response.json().player_id);",
							"    }",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_url}}/accounts/{{username}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"accounts",
						"{{username}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "roll_without_money",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Insufficient funds (400)\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/roll",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"roll"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_collection_empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Empty collection (200)\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(pm.response.json()).to.eql([]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/collection",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"collection"
					]
				}
			},
			"response": []
		},
		{
			"name": "recharge",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Recharged (200)\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_url}}/recharge/{{player_id}}/999999",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"recharge",
						"{{player_id}}",
						"999999"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Balance is correct (200)\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(pm.response.json().balance).to.equal(999999);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/balance",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"balance"
					]
				}
			},
			"response": []
		},
		{
			"name": "roll",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Rolled (200)\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/roll",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"roll"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_collection_1gacha",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Collection contains 1 gacha (200)\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(pm.response.json()).to.be.an('array').that.has.lengthOf(1);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/collection",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"collection"
					]
				}
			},
			"response": []
		},
		{
			"name": "transfer_gacha",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Gifted gacha (200)\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_url}}/giftGacha/{{player_id}}/1234",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"giftGacha",
						"{{player_id}}",
						"1234"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_rolls",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Current rolls are only 1 (200)\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(pm.response.json()).to.be.an('array').that.has.lengthOf(1);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/rolls",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"rolls"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_collection_2gacha",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains 2 gachas\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('array').that.has.lengthOf(2);",
							"});",
							"",
							"pm.test(\"Response contains the gacha we gifted\", function () {",
							"    pm.expect(pm.response.json()).to.deep.include({ \"gacha_id\": 1234, \"quantity\": 1 });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/collection",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"collection"
					]
				}
			},
			"response": []
		}
	]
}